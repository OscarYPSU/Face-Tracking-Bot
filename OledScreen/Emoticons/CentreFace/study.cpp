// HappyFace.cpp
#include "study.h"
#include "display.h"

void studySetup(){
  Serial.begin(9600);
  
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  
  display.clearDisplay();
  
  // 'isolated-yellow-book-cartoon_1308-134897', 128x64px
  const unsigned char epd_bitmap_isolated_yellow_book_cartoon_1308_134897 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfd, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xfd, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 
	0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 
	0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xde, 0x1f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 
	0xff, 0xff, 0xbf, 0xfc, 0x7f, 0x1f, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 
	0xff, 0xfe, 0xf0, 0x7f, 0xf8, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x60, 0x01, 0xff, 0xe3, 0xf8, 0xff, 0xff, 0xef, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfd, 0xe0, 0x00, 0x07, 0xff, 0x8f, 0xe1, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xc3, 
	0xff, 0xfe, 0xc4, 0x00, 0x02, 0x0f, 0xff, 0x3f, 0xc7, 0xf7, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 
	0xff, 0xfb, 0xbf, 0xc8, 0x00, 0x04, 0x1f, 0xfc, 0x7f, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfe, 0x07, 
	0xff, 0xfd, 0xff, 0xfe, 0x00, 0x00, 0x04, 0x3f, 0xf6, 0xff, 0xe7, 0xf0, 0x00, 0x05, 0x80, 0x7f, 
	0xff, 0xf7, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x60, 0x27, 0x7b, 0xff, 0x42, 0x00, 0x07, 0x80, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x43, 0xf9, 0xfe, 0x00, 0x1f, 0xff, 0xfe, 0xff, 
	0xff, 0xf6, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x30, 0x0f, 0xe0, 0x03, 0xff, 0xff, 0xf7, 0xff, 
	0xff, 0xed, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0x00, 0x20, 0x2c, 0x0f, 0xff, 0xff, 0xdf, 0xff, 
	0xff, 0xbb, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x11, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x01, 0x1b, 0xff, 0xe0, 0x3f, 0xff, 0xfe, 0xff, 0xff, 
	0xff, 0x77, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x03, 0x87, 0xff, 0xc0, 0xff, 0xff, 0xfb, 0xff, 0xff, 
	0xff, 0xbf, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x8b, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7d, 0xfa, 0x01, 0xff, 0xff, 0xdf, 0xff, 0xff, 
	0xff, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x20, 0x38, 0x96, 0x03, 0xff, 0xff, 0x7f, 0xff, 0xff, 
	0xff, 0xdf, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x20, 0x7c, 0x5c, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfb, 0xbf, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0xd6, 0x07, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xfd, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xf4, 0x0f, 0xff, 0xef, 0xff, 0xff, 0xff, 
	0xf7, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfb, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xee, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xc0, 0x3f, 0xfd, 0xff, 0xff, 0xff, 0xff, 
	0xf7, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x04, 0x07, 0xff, 0x80, 0x7f, 0xf7, 0xff, 0xff, 0xff, 0xff, 
	0xdd, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 0x00, 0x7e, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xfe, 0x00, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xc7, 0xff, 0xff, 0xf8, 0x40, 0x1f, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xff, 0xf0, 0x00, 0x3f, 0xfa, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x7c, 0x00, 0x3f, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x80, 0x7f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xd3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
  };
  const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_isolated_yellow_book_cartoon_1308_134897
  };

  // Draw the bitmap
  display.drawBitmap(0, 0, epd_bitmap_isolated_yellow_book_cartoon_1308_134897, 128, 64, SSD1306_WHITE);

  // Display the buffer
  display.display();
}

